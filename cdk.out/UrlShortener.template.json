{
  "Description": "Minimal framework to run my own url shortener",
  "Resources": {
    "RedirectServiceRole39B6C513": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/Redirect/ServiceRole/Resource"
      }
    },
    "RedirectServiceRoleDefaultPolicy53F16DEF": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "UrlsTable60368425",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "RedirectServiceRoleDefaultPolicy53F16DEF",
        "Roles": [
          {
            "Ref": "RedirectServiceRole39B6C513"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/Redirect/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "Redirect7D9319B2": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-us-east-2"
          },
          "S3Key": "30bd6810a81f0a943998ccae4f9b1a592fe7436057b61b0f55e3b9ec345b5822.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "RedirectServiceRole39B6C513",
            "Arn"
          ]
        },
        "Architectures": [
          "arm64"
        ],
        "Handler": "index.redirectHandler",
        "Runtime": "nodejs14.x"
      },
      "DependsOn": [
        "RedirectServiceRoleDefaultPolicy53F16DEF",
        "RedirectServiceRole39B6C513"
      ],
      "Metadata": {
        "aws:cdk:path": "UrlShortener/Redirect/Resource",
        "aws:asset:path": "asset.30bd6810a81f0a943998ccae4f9b1a592fe7436057b61b0f55e3b9ec345b5822",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "UrlsTable60368425": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "UrlsTable"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsTable/Resource"
      }
    },
    "UrlsEndpoint8621A7FE": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Endpoint for calls to redirect",
        "Name": "RedirectEndpoint"
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Resource"
      }
    },
    "UrlsEndpointCloudWatchRoleC765EE8D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/CloudWatchRole/Resource"
      }
    },
    "UrlsEndpointAccount86CB614E": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "UrlsEndpointCloudWatchRoleC765EE8D",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "UrlsEndpoint8621A7FE"
      ],
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Account"
      }
    },
    "UrlsEndpointDeployment6D575FA22697a19499ee3a2c4cee20824c59e688": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "UrlsEndpointproxyANY3D95C1E8",
        "UrlsEndpointproxyB88A9FFF",
        "UrlsEndpointANY28A19200"
      ],
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Deployment/Resource"
      }
    },
    "UrlsEndpointDeploymentStageprodCF73A1E7": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        },
        "DeploymentId": {
          "Ref": "UrlsEndpointDeployment6D575FA22697a19499ee3a2c4cee20824c59e688"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "UrlsEndpointAccount86CB614E"
      ],
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/DeploymentStage.prod/Resource"
      }
    },
    "UrlsEndpointproxyB88A9FFF": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "UrlsEndpoint8621A7FE",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/{proxy+}/Resource"
      }
    },
    "UrlsEndpointproxyANYApiPermissionUrlShortenerUrlsEndpointAAE86FA7ANYproxy1953C6D6": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Redirect7D9319B2",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UrlsEndpoint8621A7FE"
              },
              "/",
              {
                "Ref": "UrlsEndpointDeploymentStageprodCF73A1E7"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/{proxy+}/ANY/ApiPermission.UrlShortenerUrlsEndpointAAE86FA7.ANY..{proxy+}"
      }
    },
    "UrlsEndpointproxyANYApiPermissionTestUrlShortenerUrlsEndpointAAE86FA7ANYproxyFB4B9859": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Redirect7D9319B2",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UrlsEndpoint8621A7FE"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/{proxy+}/ANY/ApiPermission.Test.UrlShortenerUrlsEndpointAAE86FA7.ANY..{proxy+}"
      }
    },
    "UrlsEndpointproxyANY3D95C1E8": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "UrlsEndpointproxyB88A9FFF"
        },
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Redirect7D9319B2",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/{proxy+}/ANY/Resource"
      }
    },
    "UrlsEndpointANYApiPermissionUrlShortenerUrlsEndpointAAE86FA7ANY08DF0274": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Redirect7D9319B2",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UrlsEndpoint8621A7FE"
              },
              "/",
              {
                "Ref": "UrlsEndpointDeploymentStageprodCF73A1E7"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/ANY/ApiPermission.UrlShortenerUrlsEndpointAAE86FA7.ANY.."
      }
    },
    "UrlsEndpointANYApiPermissionTestUrlShortenerUrlsEndpointAAE86FA7ANY56E98048": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "Redirect7D9319B2",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:us-east-2:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "UrlsEndpoint8621A7FE"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/ANY/ApiPermission.Test.UrlShortenerUrlsEndpointAAE86FA7.ANY.."
      }
    },
    "UrlsEndpointANY28A19200": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "UrlsEndpoint8621A7FE",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:us-east-2:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "Redirect7D9319B2",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/Default/ANY/Resource"
      }
    },
    "UrlsEndpointShortDomain82163395": {
      "Type": "AWS::ApiGateway::DomainName",
      "Properties": {
        "CertificateArn": "arn:aws:acm:us-east-1:695841149075:certificate/da6d15ab-437e-47fa-aaf0-125c39e97499",
        "DomainName": "ibra.link",
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "SecurityPolicy": "TLS_1_2"
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/ShortDomain/Resource"
      }
    },
    "UrlsEndpointShortDomainMapUrlShortenerUrlsEndpointAAE86FA762ED6D68": {
      "Type": "AWS::ApiGateway::BasePathMapping",
      "Properties": {
        "DomainName": {
          "Ref": "UrlsEndpointShortDomain82163395"
        },
        "RestApiId": {
          "Ref": "UrlsEndpoint8621A7FE"
        },
        "Stage": {
          "Ref": "UrlsEndpointDeploymentStageprodCF73A1E7"
        }
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/UrlsEndpoint/ShortDomain/Map:--=>UrlShortenerUrlsEndpointAAE86FA7/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/12PzU7DMBCEn6V3x5AWcU+pOFGIAvdqYy+pm/hHsU2JIr87tlNExGm/Ha9ndre0fKD3G7jagvG+GERL53cHrCdROs0DyJYDnZ+9Yk5oRZ4+1ZprHKWwNnaBCJB0bvSA6SHXWg+CTXkuUyB2dwJr0VlapRJ7uvesR7cHi4RPCqTmcYUPaBefDIGAER04vMJE55e8U4PWVUbkrD+sGNNeOXJAM+hJYsSorrp4W5eNF4hftR8Z5vh61N/Tr3IzXviI7qx5km500BKEegWZ51ZdMqrBnY9gjFBdev0nhUDy7WmBNLEOfPPOeLeODkRpjvRi777KR1ru6HZzsUIUY7xSSKTNUn8A6TdthccBAAA="
      },
      "Metadata": {
        "aws:cdk:path": "UrlShortener/CDKMetadata/Default"
      }
    }
  },
  "Outputs": {
    "UrlsEndpoint99833877": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "UrlsEndpoint8621A7FE"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "UrlsEndpointDeploymentStageprodCF73A1E7"
            },
            "/"
          ]
        ]
      }
    },
    "Testing": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "UrlsEndpoint8621A7FE"
            },
            ".execute-api.us-east-2.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "UrlsEndpointDeploymentStageprodCF73A1E7"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}